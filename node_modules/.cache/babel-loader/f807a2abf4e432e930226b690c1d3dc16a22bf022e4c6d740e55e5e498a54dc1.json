{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corin\\\\Desktop\\\\my-app\\\\src\\\\components\\\\listRecipe.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './App.css';\nimport cocktails from './data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alcohol = [{\n  name: \"Rum\",\n  checked: false\n}, {\n  name: \"Vodka\",\n  checked: false\n}, {\n  name: \"Gin\",\n  checked: false\n}, {\n  name: \"Alcohol free\",\n  checked: false\n}];\nexport const Checkbox = _ref => {\n  let {\n    isChecked,\n    label,\n    checkHandler,\n    index\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: `checkbox-${index}`,\n      checked: isChecked,\n      onChange: checkHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `checkbox-${index}`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n_c = Checkbox;\nfunction RecipeList() {\n  _s();\n  const [alcohol, setAlcohol] = useState(allAlcohol);\n  const updateCheckStatus = index => {\n    setAlcohol(cocktails.map((alcohol, currentIndex) => currentIndex === index ? {\n      ...alcohol,\n      checked: !alcohol.checked\n    } : alcohol));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), cocktails.map(cocktail => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: cocktail.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cocktail.image,\n          alt: cocktail.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [cocktail.ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: ingredient\n          }, ingredient, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: cocktail.recipe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, cocktail.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this);\n  };\n}\n_s(RecipeList, \"74fAXHITwHt+AWe//gPvl97GVlY=\");\n_c2 = RecipeList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Checkbox\");\n$RefreshReg$(_c2, \"RecipeList\");","map":{"version":3,"names":["React","cocktails","jsxDEV","_jsxDEV","alcohol","name","checked","Checkbox","_ref","isChecked","label","checkHandler","index","children","type","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","RecipeList","_s","setAlcohol","useState","allAlcohol","updateCheckStatus","map","currentIndex","cocktail","src","image","alt","ingredients","ingredient","recipe","_c2","$RefreshReg$"],"sources":["C:/Users/corin/Desktop/my-app/src/components/listRecipe.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\nimport cocktails from './data.js';\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const alcohol = [\r\n    { name: \"Rum\", checked: false },\r\n    { name: \"Vodka\", checked: false },\r\n    { name: \"Gin\", checked: false },\r\n    { name: \"Alcohol free\", checked: false },\r\n  ]\r\n  export const Checkbox = ({ isChecked, label, checkHandler, index }) => {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={`checkbox-${index}`}\r\n          checked={isChecked}\r\n          onChange={checkHandler}\r\n        />\r\n        <label htmlFor={`checkbox-${index}`}>{label}</label>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function RecipeList() {\r\n    const [alcohol, setAlcohol] = useState(allAlcohol)\r\n\r\n  const updateCheckStatus = index => {\r\n    setAlcohol(\r\n      cocktails.map((alcohol, currentIndex) =>\r\n        currentIndex === index\r\n          ? { ...alcohol, checked: !alcohol.checked }\r\n          : alcohol\r\n      )\r\n    )\r\n    return (\r\n    <div> {/* arrays to pull in the cocktail details from data.js where the data is stored */}\r\n        <h1>Recipes</h1>\r\n        {cocktails.map(cocktail =>\r\n          <div key={cocktail.id}>\r\n            <h2>{cocktail.name}</h2>\r\n            <img src={cocktail.image} alt={cocktail.name} />\r\n            <ul>\r\n              {cocktail.ingredients.map(ingredient =>\r\n                <li key={ingredient}>\r\n                  {ingredient}\r\n                </li>\r\n              )}\r\n            \r\n           <p>{cocktail.recipe}</p>\r\n            \r\n                \r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
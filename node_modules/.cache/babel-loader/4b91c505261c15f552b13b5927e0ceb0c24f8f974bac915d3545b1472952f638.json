{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corin\\\\Desktop\\\\my-app\\\\src\\\\components\\\\listRecipe.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './App.css';\nimport cocktails from './data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alcohol = [{\n  name: \"Rum\",\n  checked: false\n}, {\n  name: \"Vodka\",\n  checked: false\n}, {\n  name: \"Gin\",\n  checked: false\n}, {\n  name: \"Alcohol free\",\n  checked: false\n}];\nexport const Checkbox = _ref => {\n  let {\n    isChecked,\n    label,\n    checkHandler,\n    index\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: `checkbox-${index}`,\n      checked: isChecked,\n      onChange: checkHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `checkbox-${index}`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n_c = Checkbox;\nfunction RecipeList() {\n  _s();\n  const [alcohol, setAlcohol] = useState(alcohol);\n  const updateCheckStatus = index => {\n    setAlcohol(cocktails.map((alcohols, currentIndex) => currentIndex === index ? {\n      ...alcohols,\n      checked: !alcohols.checked\n    } : alcohols));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [alcohol.map((alcohols, index) => /*#__PURE__*/_jsxDEV(Checkbox, {\n        isChecked: alcohols.checked,\n        checkHandler: () => updateCheckStatus(index),\n        label: alcohols.name,\n        index: index\n      }, alcohols.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(alcohol, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  };\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), cocktails.map(cocktail => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: cocktail.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cocktail.image,\n        alt: cocktail.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [cocktail.ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingredient\n        }, ingredient, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: cocktail.recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, cocktail.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeList, \"7O67/AfDMEwd82ZkMJUESCzQPYw=\");\n_c2 = RecipeList;\nexport default RecipeList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Checkbox\");\n$RefreshReg$(_c2, \"RecipeList\");","map":{"version":3,"names":["React","cocktails","jsxDEV","_jsxDEV","alcohol","name","checked","Checkbox","_ref","isChecked","label","checkHandler","index","children","type","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","RecipeList","_s","setAlcohol","useState","updateCheckStatus","map","alcohols","currentIndex","className","JSON","stringify","cocktail","src","image","alt","ingredients","ingredient","recipe","_c2","$RefreshReg$"],"sources":["C:/Users/corin/Desktop/my-app/src/components/listRecipe.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\nimport cocktails from './data.js';\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const alcohol = [\r\n    { name: \"Rum\", checked: false },\r\n    { name: \"Vodka\", checked: false },\r\n    { name: \"Gin\", checked: false },\r\n    { name: \"Alcohol free\", checked: false },\r\n  ]\r\n  export const Checkbox = ({ isChecked, label, checkHandler, index }) => {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={`checkbox-${index}`}\r\n          checked={isChecked}\r\n          onChange={checkHandler}\r\n        />\r\n        <label htmlFor={`checkbox-${index}`}>{label}</label>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function RecipeList() {\r\n    const [alcohol, setAlcohol] = useState(alcohol)\r\n\r\n  const updateCheckStatus = index => {\r\n    setAlcohol(\r\n      cocktails.map((alcohols, currentIndex) =>\r\n        currentIndex === index\r\n          ? { ...alcohols, checked: !alcohols.checked }\r\n          : alcohols\r\n      )\r\n    )\r\n    return (\r\n\r\n      <div className=\"App\">\r\n      {alcohol.map((alcohols, index) => (\r\n        <Checkbox\r\n          key={alcohols.name}\r\n          isChecked={alcohols.checked}\r\n          checkHandler={() => updateCheckStatus(index)}\r\n          label={alcohols.name}\r\n          index={index}\r\n        />\r\n      ))}\r\n      <p>\r\n        <pre>{JSON.stringify(alcohol, null, 2)}</pre>\r\n      </p>\r\n    </div>\r\n    )\r\n      };\r\n    <div> {/* arrays to pull in the cocktail details from data.js where the data is stored */}\r\n        <h1>Recipes</h1>\r\n        {cocktails.map(cocktail =>\r\n          <div key={cocktail.id}>\r\n            <h2>{cocktail.name}</h2>\r\n            <img src={cocktail.image} alt={cocktail.name} />\r\n            <ul>\r\n              {cocktail.ingredients.map(ingredient =>\r\n                <li key={ingredient}>\r\n                  {ingredient}\r\n                </li>\r\n              )}\r\n            \r\n           <p>{cocktail.recipe}</p>\r\n            \r\n                \r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ;\r\n  }\r\n\r\n  export default RecipeList\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}